// @generated by protoc-gen-es v2.2.3 with parameter "target=ts"
// @generated from file postgres_extension/v1/postgres_extension.proto (package postgres_extension.v1, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenExtension, GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import { enumDesc, extDesc, fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv1";
import type { FieldOptions, MessageOptions } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_descriptor } from "@bufbuild/protobuf/wkt";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file postgres_extension/v1/postgres_extension.proto.
 */
export const file_postgres_extension_v1_postgres_extension: GenFile = /*@__PURE__*/
  fileDesc("Ci5wb3N0Z3Jlc19leHRlbnNpb24vdjEvcG9zdGdyZXNfZXh0ZW5zaW9uLnByb3RvEhVwb3N0Z3Jlc19leHRlbnNpb24udjEilgMKD1RhYmxlUHJvcGVydGllcxISCgp0YWJsZV9uYW1lGAEgASgJEg4KBnNjaGVtYRgCIAEoCRJKCgpwcm9wZXJ0aWVzGAMgAygLMjYucG9zdGdyZXNfZXh0ZW5zaW9uLnYxLlRhYmxlUHJvcGVydGllcy5Qcm9wZXJ0aWVzRW50cnkSNwoHaW5kZXhlcxgEIAMoCzImLnBvc3RncmVzX2V4dGVuc2lvbi52MS5JbmRleERlZmluaXRpb24SOQoMcGFydGl0aW9uaW5nGAUgASgLMiMucG9zdGdyZXNfZXh0ZW5zaW9uLnYxLlBhcnRpdGlvbmluZxIsCgZncmFudHMYBiADKAsyHC5wb3N0Z3Jlc19leHRlbnNpb24udjEuR3JhbnQSPgoKZXhjbHVzaW9ucxgHIAMoCzIqLnBvc3RncmVzX2V4dGVuc2lvbi52MS5FeGNsdXNpb25Db25zdHJhaW50GjEKD1Byb3BlcnRpZXNFbnRyeRILCgNrZXkYASABKAkSDQoFdmFsdWUYAiABKAk6AjgBIqABCg9JbmRleERlZmluaXRpb24SDAoEbmFtZRgBIAEoCRIPCgdjb2x1bW5zGAIgAygJEhIKCmV4cHJlc3Npb24YAyABKAkSNAoKaW5kZXhfdHlwZRgEIAEoDjIgLnBvc3RncmVzX2V4dGVuc2lvbi52MS5JbmRleFR5cGUSDgoGdW5pcXVlGAUgASgIEhQKDHdoZXJlX2NsYXVzZRgGIAEoCSKgAQoMUGFydGl0aW9uaW5nEjYKBHR5cGUYASABKA4yKC5wb3N0Z3Jlc19leHRlbnNpb24udjEuUGFydGl0aW9uaW5nLlR5cGUSDAoEa2V5cxgCIAMoCSJKCgRUeXBlEhQKEFRZUEVfVU5TUEVDSUZJRUQQABIOCgpUWVBFX1JBTkdFEAESDQoJVFlQRV9IQVNIEAISDQoJVFlQRV9MSVNUEAMiKAoFR3JhbnQSEQoJcHJpdmlsZWdlGAEgASgJEgwKBHJvbGUYAiABKAkifwoTRXhjbHVzaW9uQ29uc3RyYWludBIMCgRuYW1lGAEgASgJEhIKCmV4cHJlc3Npb24YAiABKAkSEAoIb3BlcmF0b3IYAyABKAkSNAoKaW5kZXhfdHlwZRgEIAEoDjIgLnBvc3RncmVzX2V4dGVuc2lvbi52MS5JbmRleFR5cGUiiQIKEENvbHVtblByb3BlcnRpZXMSEwoLY29sdW1uX3R5cGUYASABKAkSPAoLY29uc3RyYWludHMYAiADKA4yJy5wb3N0Z3Jlc19leHRlbnNpb24udjEuQ29sdW1uQ29uc3RyYWludBIVCg1kZWZhdWx0X3ZhbHVlGAMgASgJEhMKC2ZvcmVpZ25fa2V5GAQgASgJEjoKCW9uX2RlbGV0ZRgFIAEoDjInLnBvc3RncmVzX2V4dGVuc2lvbi52MS5Gb3JlaWduS2V5QWN0aW9uEjoKCW9uX3VwZGF0ZRgGIAEoDjInLnBvc3RncmVzX2V4dGVuc2lvbi52MS5Gb3JlaWduS2V5QWN0aW9uIn0KGEFkdmFuY2VkQ29sdW1uUHJvcGVydGllcxIYChBnZW5lcmF0ZWRfY29sdW1uGAEgASgIEhcKD2lkZW50aXR5X2NvbHVtbhgCIAEoCBISCgpkZWZlcnJhYmxlGAMgASgIEhoKEmluaXRpYWxseV9kZWZlcnJlZBgEIAEoCCp7CglJbmRleFR5cGUSGgoWSU5ERVhfVFlQRV9VTlNQRUNJRklFRBAAEhQKEElOREVYX1RZUEVfQlRSRUUQARISCg5JTkRFWF9UWVBFX0dJThACEhMKD0lOREVYX1RZUEVfR0lTVBADEhMKD0lOREVYX1RZUEVfSEFTSBAEKrwBChBGb3JlaWduS2V5QWN0aW9uEiIKHkZPUkVJR05fS0VZX0FDVElPTl9VTlNQRUNJRklFRBAAEh8KG0ZPUkVJR05fS0VZX0FDVElPTl9SRVNUUklDVBABEh4KGkZPUkVJR05fS0VZX0FDVElPTl9DQVNDQURFEAISHwobRk9SRUlHTl9LRVlfQUNUSU9OX1NFVF9OVUxMEAMSIgoeRk9SRUlHTl9LRVlfQUNUSU9OX1NFVF9ERUZBVUxUEAQq1gEKEENvbHVtbkNvbnN0cmFpbnQSIQodQ09MVU1OX0NPTlNUUkFJTlRfVU5TUEVDSUZJRUQQABIhCh1DT0xVTU5fQ09OU1RSQUlOVF9QUklNQVJZX0tFWRABEh4KGkNPTFVNTl9DT05TVFJBSU5UX05PVF9OVUxMEAISHAoYQ09MVU1OX0NPTlNUUkFJTlRfVU5JUVVFEAMSGwoXQ09MVU1OX0NPTlNUUkFJTlRfQ0hFQ0sQBBIhCh1DT0xVTU5fQ09OU1RSQUlOVF9GT1JFSUdOX0tFWRAFOnQKEHRhYmxlX3Byb3BlcnRpZXMSHy5nb29nbGUucHJvdG9idWYuTWVzc2FnZU9wdGlvbnMY0IYDIAEoCzImLnBvc3RncmVzX2V4dGVuc2lvbi52MS5UYWJsZVByb3BlcnRpZXNSD3RhYmxlUHJvcGVydGllczp1ChFjb2x1bW5fcHJvcGVydGllcxIdLmdvb2dsZS5wcm90b2J1Zi5GaWVsZE9wdGlvbnMYuI4DIAEoCzInLnBvc3RncmVzX2V4dGVuc2lvbi52MS5Db2x1bW5Qcm9wZXJ0aWVzUhBjb2x1bW5Qcm9wZXJ0aWVzOo4BChphZHZhbmNlZF9jb2x1bW5fcHJvcGVydGllcxIdLmdvb2dsZS5wcm90b2J1Zi5GaWVsZE9wdGlvbnMY2K0DIAEoCzIvLnBvc3RncmVzX2V4dGVuc2lvbi52MS5BZHZhbmNlZENvbHVtblByb3BlcnRpZXNSGGFkdmFuY2VkQ29sdW1uUHJvcGVydGllczpNChFpc19jb21wb3NpdGVfdHlwZRIfLmdvb2dsZS5wcm90b2J1Zi5NZXNzYWdlT3B0aW9ucxiQxQMgASgIUg9pc0NvbXBvc2l0ZVR5cGVC8gEKGWNvbS5wb3N0Z3Jlc19leHRlbnNpb24udjFCFlBvc3RncmVzRXh0ZW5zaW9uUHJvdG9QAVpMZ2l0aHViLmNvbS96YWNraWxlcy9wcm90b2J1Zi1wb3N0Z3Jlcy1leHRlbnNpb24vZ2VuL2dvL3Bvc3RncmVzX2V4dGVuc2lvbi92MaICA1BYWKoCFFBvc3RncmVzRXh0ZW5zaW9uLlYxygIUUG9zdGdyZXNFeHRlbnNpb25cVjHiAiBQb3N0Z3Jlc0V4dGVuc2lvblxWMVxHUEJNZXRhZGF0YeoCFVBvc3RncmVzRXh0ZW5zaW9uOjpWMWIGcHJvdG8z", [file_google_protobuf_descriptor]);

/**
 * =============================
 * Table-Level Properties
 * =============================
 *
 * @generated from message postgres_extension.v1.TableProperties
 */
export type TableProperties = Message<"postgres_extension.v1.TableProperties"> & {
  /**
   * PostgreSQL table name.
   *
   * @generated from field: string table_name = 1;
   */
  tableName: string;

  /**
   * Schema for the table.
   *
   * @generated from field: string schema = 2;
   */
  schema: string;

  /**
   * General table properties (e.g., autovacuum settings).
   *
   * @generated from field: map<string, string> properties = 3;
   */
  properties: { [key: string]: string };

  /**
   * Table indexes.
   *
   * @generated from field: repeated postgres_extension.v1.IndexDefinition indexes = 4;
   */
  indexes: IndexDefinition[];

  /**
   * Partitioning details.
   *
   * @generated from field: postgres_extension.v1.Partitioning partitioning = 5;
   */
  partitioning?: Partitioning;

  /**
   * Permissions or grants for the table.
   *
   * @generated from field: repeated postgres_extension.v1.Grant grants = 6;
   */
  grants: Grant[];

  /**
   * Exclusion constraints.
   *
   * @generated from field: repeated postgres_extension.v1.ExclusionConstraint exclusions = 7;
   */
  exclusions: ExclusionConstraint[];
};

/**
 * Describes the message postgres_extension.v1.TableProperties.
 * Use `create(TablePropertiesSchema)` to create a new message.
 */
export const TablePropertiesSchema: GenMessage<TableProperties> = /*@__PURE__*/
  messageDesc(file_postgres_extension_v1_postgres_extension, 0);

/**
 * =============================
 * Index Definition
 * =============================
 *
 * @generated from message postgres_extension.v1.IndexDefinition
 */
export type IndexDefinition = Message<"postgres_extension.v1.IndexDefinition"> & {
  /**
   * Index name.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Columns included in the index.
   *
   * @generated from field: repeated string columns = 2;
   */
  columns: string[];

  /**
   * Expression for expression-based indexes.
   *
   * @generated from field: string expression = 3;
   */
  expression: string;

  /**
   * Index type.
   *
   * @generated from field: postgres_extension.v1.IndexType index_type = 4;
   */
  indexType: IndexType;

  /**
   * Unique index.
   *
   * @generated from field: bool unique = 5;
   */
  unique: boolean;

  /**
   * Partial index condition.
   *
   * @generated from field: string where_clause = 6;
   */
  whereClause: string;
};

/**
 * Describes the message postgres_extension.v1.IndexDefinition.
 * Use `create(IndexDefinitionSchema)` to create a new message.
 */
export const IndexDefinitionSchema: GenMessage<IndexDefinition> = /*@__PURE__*/
  messageDesc(file_postgres_extension_v1_postgres_extension, 1);

/**
 * =============================
 * Partitioning Definition
 * =============================
 *
 * @generated from message postgres_extension.v1.Partitioning
 */
export type Partitioning = Message<"postgres_extension.v1.Partitioning"> & {
  /**
   * Partitioning type.
   *
   * @generated from field: postgres_extension.v1.Partitioning.Type type = 1;
   */
  type: Partitioning_Type;

  /**
   * Partitioning keys.
   *
   * @generated from field: repeated string keys = 2;
   */
  keys: string[];
};

/**
 * Describes the message postgres_extension.v1.Partitioning.
 * Use `create(PartitioningSchema)` to create a new message.
 */
export const PartitioningSchema: GenMessage<Partitioning> = /*@__PURE__*/
  messageDesc(file_postgres_extension_v1_postgres_extension, 2);

/**
 * @generated from enum postgres_extension.v1.Partitioning.Type
 */
export enum Partitioning_Type {
  /**
   * @generated from enum value: TYPE_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * @generated from enum value: TYPE_RANGE = 1;
   */
  RANGE = 1,

  /**
   * @generated from enum value: TYPE_HASH = 2;
   */
  HASH = 2,

  /**
   * @generated from enum value: TYPE_LIST = 3;
   */
  LIST = 3,
}

/**
 * Describes the enum postgres_extension.v1.Partitioning.Type.
 */
export const Partitioning_TypeSchema: GenEnum<Partitioning_Type> = /*@__PURE__*/
  enumDesc(file_postgres_extension_v1_postgres_extension, 2, 0);

/**
 * =============================
 * Permissions and Grants
 * =============================
 *
 * @generated from message postgres_extension.v1.Grant
 */
export type Grant = Message<"postgres_extension.v1.Grant"> & {
  /**
   * Privilege type (e.g., SELECT, INSERT).
   *
   * @generated from field: string privilege = 1;
   */
  privilege: string;

  /**
   * Role receiving the privilege.
   *
   * @generated from field: string role = 2;
   */
  role: string;
};

/**
 * Describes the message postgres_extension.v1.Grant.
 * Use `create(GrantSchema)` to create a new message.
 */
export const GrantSchema: GenMessage<Grant> = /*@__PURE__*/
  messageDesc(file_postgres_extension_v1_postgres_extension, 3);

/**
 * =============================
 * Exclusion Constraint
 * =============================
 *
 * @generated from message postgres_extension.v1.ExclusionConstraint
 */
export type ExclusionConstraint = Message<"postgres_extension.v1.ExclusionConstraint"> & {
  /**
   * Constraint name.
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Expression or column involved.
   *
   * @generated from field: string expression = 2;
   */
  expression: string;

  /**
   * Exclusion operator (e.g., "WITH &&").
   *
   * @generated from field: string operator = 3;
   */
  operator: string;

  /**
   * Index type for the constraint.
   *
   * @generated from field: postgres_extension.v1.IndexType index_type = 4;
   */
  indexType: IndexType;
};

/**
 * Describes the message postgres_extension.v1.ExclusionConstraint.
 * Use `create(ExclusionConstraintSchema)` to create a new message.
 */
export const ExclusionConstraintSchema: GenMessage<ExclusionConstraint> = /*@__PURE__*/
  messageDesc(file_postgres_extension_v1_postgres_extension, 4);

/**
 * =============================
 * Column-Level Properties
 * =============================
 *
 * @generated from message postgres_extension.v1.ColumnProperties
 */
export type ColumnProperties = Message<"postgres_extension.v1.ColumnProperties"> & {
  /**
   * PostgreSQL data type for the column.
   *
   * @generated from field: string column_type = 1;
   */
  columnType: string;

  /**
   * Column constraints (e.g., PRIMARY KEY, NOT NULL).
   *
   * @generated from field: repeated postgres_extension.v1.ColumnConstraint constraints = 2;
   */
  constraints: ColumnConstraint[];

  /**
   * Default value for the column.
   *
   * @generated from field: string default_value = 3;
   */
  defaultValue: string;

  /**
   * Foreign key reference (table.column).
   *
   * @generated from field: string foreign_key = 4;
   */
  foreignKey: string;

  /**
   * Action on delete.
   *
   * @generated from field: postgres_extension.v1.ForeignKeyAction on_delete = 5;
   */
  onDelete: ForeignKeyAction;

  /**
   * Action on update.
   *
   * @generated from field: postgres_extension.v1.ForeignKeyAction on_update = 6;
   */
  onUpdate: ForeignKeyAction;
};

/**
 * Describes the message postgres_extension.v1.ColumnProperties.
 * Use `create(ColumnPropertiesSchema)` to create a new message.
 */
export const ColumnPropertiesSchema: GenMessage<ColumnProperties> = /*@__PURE__*/
  messageDesc(file_postgres_extension_v1_postgres_extension, 5);

/**
 * =============================
 * Advanced Properties
 * =============================
 *
 * @generated from message postgres_extension.v1.AdvancedColumnProperties
 */
export type AdvancedColumnProperties = Message<"postgres_extension.v1.AdvancedColumnProperties"> & {
  /**
   * Generated column.
   *
   * @generated from field: bool generated_column = 1;
   */
  generatedColumn: boolean;

  /**
   * Identity column.
   *
   * @generated from field: bool identity_column = 2;
   */
  identityColumn: boolean;

  /**
   * Deferrable constraint.
   *
   * @generated from field: bool deferrable = 3;
   */
  deferrable: boolean;

  /**
   * Initially deferred constraint.
   *
   * @generated from field: bool initially_deferred = 4;
   */
  initiallyDeferred: boolean;
};

/**
 * Describes the message postgres_extension.v1.AdvancedColumnProperties.
 * Use `create(AdvancedColumnPropertiesSchema)` to create a new message.
 */
export const AdvancedColumnPropertiesSchema: GenMessage<AdvancedColumnProperties> = /*@__PURE__*/
  messageDesc(file_postgres_extension_v1_postgres_extension, 6);

/**
 * =============================
 * Index Type Enum
 * =============================
 *
 * @generated from enum postgres_extension.v1.IndexType
 */
export enum IndexType {
  /**
   * @generated from enum value: INDEX_TYPE_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * @generated from enum value: INDEX_TYPE_BTREE = 1;
   */
  BTREE = 1,

  /**
   * @generated from enum value: INDEX_TYPE_GIN = 2;
   */
  GIN = 2,

  /**
   * @generated from enum value: INDEX_TYPE_GIST = 3;
   */
  GIST = 3,

  /**
   * @generated from enum value: INDEX_TYPE_HASH = 4;
   */
  HASH = 4,
}

/**
 * Describes the enum postgres_extension.v1.IndexType.
 */
export const IndexTypeSchema: GenEnum<IndexType> = /*@__PURE__*/
  enumDesc(file_postgres_extension_v1_postgres_extension, 0);

/**
 * =============================
 * Foreign Key Action Enum
 * =============================
 *
 * @generated from enum postgres_extension.v1.ForeignKeyAction
 */
export enum ForeignKeyAction {
  /**
   * @generated from enum value: FOREIGN_KEY_ACTION_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * @generated from enum value: FOREIGN_KEY_ACTION_RESTRICT = 1;
   */
  RESTRICT = 1,

  /**
   * @generated from enum value: FOREIGN_KEY_ACTION_CASCADE = 2;
   */
  CASCADE = 2,

  /**
   * @generated from enum value: FOREIGN_KEY_ACTION_SET_NULL = 3;
   */
  SET_NULL = 3,

  /**
   * @generated from enum value: FOREIGN_KEY_ACTION_SET_DEFAULT = 4;
   */
  SET_DEFAULT = 4,
}

/**
 * Describes the enum postgres_extension.v1.ForeignKeyAction.
 */
export const ForeignKeyActionSchema: GenEnum<ForeignKeyAction> = /*@__PURE__*/
  enumDesc(file_postgres_extension_v1_postgres_extension, 1);

/**
 * =============================
 * Column Constraint Enum
 * =============================
 *
 * @generated from enum postgres_extension.v1.ColumnConstraint
 */
export enum ColumnConstraint {
  /**
   * @generated from enum value: COLUMN_CONSTRAINT_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * @generated from enum value: COLUMN_CONSTRAINT_PRIMARY_KEY = 1;
   */
  PRIMARY_KEY = 1,

  /**
   * @generated from enum value: COLUMN_CONSTRAINT_NOT_NULL = 2;
   */
  NOT_NULL = 2,

  /**
   * @generated from enum value: COLUMN_CONSTRAINT_UNIQUE = 3;
   */
  UNIQUE = 3,

  /**
   * @generated from enum value: COLUMN_CONSTRAINT_CHECK = 4;
   */
  CHECK = 4,

  /**
   * @generated from enum value: COLUMN_CONSTRAINT_FOREIGN_KEY = 5;
   */
  FOREIGN_KEY = 5,
}

/**
 * Describes the enum postgres_extension.v1.ColumnConstraint.
 */
export const ColumnConstraintSchema: GenEnum<ColumnConstraint> = /*@__PURE__*/
  enumDesc(file_postgres_extension_v1_postgres_extension, 2);

/**
 * Custom table properties.
 *
 * @generated from extension: postgres_extension.v1.TableProperties table_properties = 50000;
 */
export const table_properties: GenExtension<MessageOptions, TableProperties> = /*@__PURE__*/
  extDesc(file_postgres_extension_v1_postgres_extension, 0);

/**
 * Custom column properties.
 *
 * @generated from extension: postgres_extension.v1.ColumnProperties column_properties = 51000;
 */
export const column_properties: GenExtension<FieldOptions, ColumnProperties> = /*@__PURE__*/
  extDesc(file_postgres_extension_v1_postgres_extension, 1);

/**
 * Advanced properties.
 *
 * @generated from extension: postgres_extension.v1.AdvancedColumnProperties advanced_column_properties = 55000;
 */
export const advanced_column_properties: GenExtension<FieldOptions, AdvancedColumnProperties> = /*@__PURE__*/
  extDesc(file_postgres_extension_v1_postgres_extension, 2);

/**
 * Marks the message as a composite type.
 *
 * @generated from extension: bool is_composite_type = 58000;
 */
export const is_composite_type: GenExtension<MessageOptions, boolean> = /*@__PURE__*/
  extDesc(file_postgres_extension_v1_postgres_extension, 3);

